// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Data.Entities.TravelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataRozpoczecia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataZakonczenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiejsceKoncowe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiejscePoczatkowe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Przewodnik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Uczestnicy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Travel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataRozpoczecia = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataZakonczenia = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiejsceKoncowe = "Łódź",
                            MiejscePoczatkowe = "Krakow",
                            Nazwa = "wycieczka ",
                            Priority = 0,
                            Przewodnik = "Alek",
                            Uczestnicy = "[\"Ola\",\"Ala\"]"
                        },
                        new
                        {
                            Id = 2,
                            DataRozpoczecia = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataZakonczenia = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiejsceKoncowe = "Łódź",
                            MiejscePoczatkowe = "Krakow",
                            Nazwa = "wycieczka ",
                            Priority = 0,
                            Przewodnik = "Alek",
                            Uczestnicy = "[\"Ola\",\"Ala\"]"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
